#!/bin/bash

restart () { pkill $1; $@ & }
restart_ () { pkill $1; sleep 1; $@ & }

# CONFIGURATION
bspc config automatic_scheme            alternate
bspc config border_width                2
bspc config border_radius               10
bspc config borderless_monocle          true
bspc config focus_follows_pointer       true
bspc config gapless_monocle             true
bspc config pointer_action1             move
bspc config pointer_action2             resize_corner
bspc config pointer_follows_focus       true
bspc config remove_disabled_monitors    true
bspc config remove_unplugged_monitors   true
bspc config split_ratio                 0.50
bspc config window_gap                  10

# WORKSPACE SETUP
WORKSPACE_CONFIG="$HOME/.config/bspwm/$(hostname)/$WM_CONF.sh"
if [ -f "$WORKSPACE_CONFIG" ]
then
  source "$WORKSPACE_CONFIG"
else
  bspc monitor -d 1 2 3 4 5 6 7 8 9 10
fi

# THEME
if [ -f ~/.cache/wal/colors.sh ]; then
  xrdb -merge ~/.cache/wal/colors.Xresources
  source ~/.cache/wal/colors.sh
  bspc config normal_border_color   "$color6"
  bspc config active_border_color   "$color6"
  bspc config focused_border_color  "$color2"
  bspc config presel_feedback_color "$color6"
fi

# COMPOSITOR
restart_ picom --config ~/.config/picom/config

# BACKGROUND
if [ -f ~/imgs/background.png ]; then
  feh --bg-fill ~/imgs/background.png
fi

# BACKLIGHT
restart clight --no-dimmer --no-kbd

# KEYBOARD
restart sxhkd

# CURSOR HIDING WHEN TYPING
restart xbanish

# DRIVE MOUNTER
restart udiskie -a

# NOTIFICATIONS
restart dunst

# STATUS BAR
restart eww daemon
eww open bar
eww update network-interface=$(ip addr | awk -F': ' '/state UP/ {print $2}' | head -1)
eww update has-battery=$([ -d /sys/module/battery ] && echo true)

# Turn off DPMS
xset s off -dpms

# SYNC DIRECTORIES TO GOOGLE DRIVE (NOT FROM)
# basename of path will be used as top level root folder on gdrive,
# i.e. /data/pdfs will be copied to gdrive:/pdfs
gdrive_sync_dir () {
  if [ -d "$1" ]; then
    name=$(basename $1)
    pkill -f "inotifywait -m -r -e create,modify,moved_to $1"
    rclone copy "$1" gdrive:${name}
    inotifywait -m -r -e create,modify,moved_to "$1" | while read -r _ _ _; do
      echo Start: $(date) >> "/tmp/gdrive_${name}_sync.log"
      rclone copy "$1" gdrive:${name}
      echo End: $(date) >> "/tmp/gdrive_${name}_sync.log"
    done
  fi
}

rclone copy gdrive:pdfs /data/pdfs &
gdrive_sync_dir /data/pdfs &

rclone copy gdrive:backgrounds /data/imgs/backgrounds &
gdrive_sync_dir /data/imgs/backgrounds &

gdrive_sync_dir /data/lectures &
gdrive_sync_dir /data/health &

# RULES
bspc rule -a Lxappearance state=floating
bspc rule -a Nm-connection-editor state=floating
bspc rule -a Pavucontrol state=floating
bspc rule -a Peek state=floating
bspc rule -a Thunar state=floating
bspc rule -a Zathura state=tiled

# SUBSCRIPTIONS
PRIMARY_MONITOR_ID=$(bspc query -M -m primary)
bspc subscribe node_state | while read -r _ monitor_id _ _ state flag; do
  if [[ "$state" != fullscreen ]]; then continue; fi
  if [[ $monitor_id != $PRIMARY_MONITOR_ID ]]; then continue; fi
  if [[ "$flag" == on ]]; then
    xdotool search --class eww-bar windowunmap
  else
    xdotool search --class eww-bar windowmap
  fi
done &
